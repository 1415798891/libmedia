"use strict";(self.webpackChunkAVPlayer=self.webpackChunkAVPlayer||[]).push([[610],{5947:(t,e,i)=>{i.d(e,{A:()=>s});var r=i(1026);class s{constructor(){(0,r.A)(this,"type",-1),(0,r.A)(this,"onStreamAdd",void 0)}destroy(t){}}},6634:(t,e,i)=>{i.r(e),i.d(e,{IVFHeader:()=>g,default:()=>b});var r=i(1026),s=i(3939),a=i(932),n=i(4624),h=i(9705),o=i(5947),d=i(4686),f=i(7837),u=i(1517),c=i(7231),l="src/avformat/formats/IIvfFormat.ts";const p={VP80:139,VP90:167};class g{constructor(){(0,r.A)(this,"version",void 0),(0,r.A)(this,"length",void 0),(0,r.A)(this,"codec",void 0),(0,r.A)(this,"width",void 0),(0,r.A)(this,"height",void 0),(0,r.A)(this,"denominator",void 0),(0,r.A)(this,"numerator",void 0),(0,r.A)(this,"framesCount",void 0),this.version=0,this.length=32,this.codec="VP80",this.width=0,this.height=0,this.framesCount=0,this.denominator=1,this.numerator=0}}class b extends o.A{constructor(){super(),(0,r.A)(this,"type",4),(0,r.A)(this,"header",void 0),this.header=new g}init(t){t.ioReader&&t.ioReader.setEndian(!1)}async readHeader(t){try{if("DKIF"!==await t.ioReader.readString(4))return n.z3("the file format is not ivf",l,104),h.LR;this.header.version=await t.ioReader.readUint16(),await t.ioReader.skip(2),this.header.codec=await t.ioReader.readString(4),this.header.width=await t.ioReader.readUint16(),this.header.height=await t.ioReader.readUint16(),this.header.denominator=await t.ioReader.readUint32(),this.header.numerator=await t.ioReader.readUint32(),this.header.framesCount=await t.ioReader.readUint32(),await t.ioReader.skip(4);const e=t.createStream();return e.codecpar.codecType=0,e.codecpar.codecId=p[this.header.codec],e.timeBase.den=this.header.denominator,e.timeBase.num=this.header.numerator,e.codecpar.width=this.header.width,e.codecpar.height=this.header.height,e.nbFrames=BigInt(Math.floor(this.header.framesCount)),this.onStreamAdd&&this.onStreamAdd(e),0}catch(e){return n.z3(e.message,l,136),t.ioReader.error}}async readAVPacket(t,e){try{const i=t.getStreamByMediaType(0);if(!i)return h.LR;{const r=t.ioReader.getPos(),n=await t.ioReader.readUint32(),h=await t.ioReader.readUint64(),o=(0,f.sY)(n);(0,u.NX)(e,o,n),await t.ioReader.readBuffer(n,(0,d.JW)(o,n)),a.M[17](e+56,r),a.M[17](e+8,h),a.M[17](e+16,h),a.M[15](e+76,this.header.denominator),a.M[15](e+72,this.header.numerator),a.M[15](e+32,i.index),i.startTime===c.Dh&&(i.startTime=s.f[17](e+8)||s.f[17](e+16))}return 0}catch(e){return-1048576!==t.ioReader.error&&n.z3(e.message,l,173),t.ioReader.error}}async seek(t,e,i,r){return BigInt(h.E$)}getAnalyzeStreamsCount(){return 1}}},2647:(t,e,i)=>{function r(t,e){if(!e.length)return null;if(1===e.length)return e[0];let i,r=0;for(i of e)r+=i.length;let s=new t(r),a=0;for(i of e)s.set(i,a),a+=i.length;return s}i.d(e,{A:()=>r})},6795:(t,e,i)=>{i.d(e,{A:()=>n});var r=i(1026),s=i(2647),a=i(11);class n{constructor(t,e=!0){(0,r.A)(this,"data",void 0),(0,r.A)(this,"buffer",void 0),(0,r.A)(this,"byteStart",void 0),(0,r.A)(this,"pos",void 0),(0,r.A)(this,"size",void 0),(0,r.A)(this,"littleEndian",void 0),this.buffer=t,this.data=t instanceof Uint8Array?new DataView(t.buffer):t.view,this.byteStart=t instanceof Uint8Array?t.byteOffset:0,this.pos=0,this.size=t.byteLength,this.littleEndian=!e}readUint8(){return this.data.getUint8(this.pos+++this.byteStart)}readUint16(){const t=this.data.getUint16(this.pos+this.byteStart,this.littleEndian);return this.pos+=2,t}readUint24(){return this.readUint16()<<8|this.readUint8()}readUint32(){const t=this.data.getUint32(this.pos+this.byteStart,this.littleEndian);return this.pos+=4,t}readUint64(){const t=BigInt(this.readUint32()),e=BigInt(this.readUint32());return this.littleEndian?e<<BigInt(32)|t:t<<BigInt(32)|e}readInt8(){return this.data.getInt8(this.pos+++this.byteStart)}readInt16(){const t=this.data.getInt16(this.pos+this.byteStart,this.littleEndian);return this.pos+=2,t}readInt32(){const t=this.data.getInt32(this.pos+this.byteStart,this.littleEndian);return this.pos+=4,t}readInt64(){const t=BigInt(this.readInt32()),e=BigInt(this.readInt32());return this.littleEndian?e<<BigInt(32)|t:t<<BigInt(32)|e}readFloat(){const t=this.data.getFloat32(this.pos+this.byteStart,this.littleEndian);return this.pos+=4,t}readDouble(){const t=this.data.getFloat64(this.pos+this.byteStart,this.littleEndian);return this.pos+=8,t}readHex(t=1){let e="";for(let i=0;i<t;i++){const t=this.readUint8().toString(16);e+=1===t.length?"0"+t:t}return e}readString(t=1){let e="";if(t){let i=this.pos;for(let e=0;e<t&&0===this.buffer[this.pos+e];e++)i++;e=a.D(this.buffer.subarray(i,i+t))}return this.pos+=t,e}readLine(){let t="";for(let e=this.pos;e<this.size;e++)if(10===this.buffer[e]||13===this.buffer[e]){t+=this.readString(e-this.pos);break}for(let t=this.pos;t<this.size&&(10===this.buffer[t]||13===this.buffer[t]);t++)this.readUint8();return t}getPos(){return BigInt(this.pos)}seek(t){t>this.size&&(t=this.size),this.pos=Math.max(0,t)}skip(t){this.seek(this.pos+t)}back(t){this.seek(this.pos-t)}remainingSize(){return this.size-this.pos}readBuffer(t){t=Math.min(t,this.remainingSize());const e=this.buffer.slice(this.pos,this.pos+t);return this.pos+=t,e}appendBuffer(t){this.buffer=(0,s.A)(Uint8Array,[this.buffer.slice(),t.slice()]),this.data=new DataView(this.buffer.buffer),this.size+=t.byteLength,this.byteStart=0}resetBuffer(t,e=!0){this.buffer=t,this.data=t instanceof Uint8Array?new DataView(t.buffer):t.view,this.byteStart=t instanceof Uint8Array?t.byteOffset:0,this.pos=0,this.size=t.byteLength,this.littleEndian=!e}}}}]);